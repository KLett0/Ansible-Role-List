---

- name: Security packages.
  ansible.builtin.package:
    name:
      - lynis
      - cron
      - firewalld
      - rkhunter
      - tcpdump
      - aide
      - unattended-upgrades
      - apt-listchanges
      - needrestart
      - selinux-basics
      - selinux-policy-default
      - auditd
      - setools
      - logcheck
      - logwatch
      - logrotate
    state: present

- name: Enable cron.
  ansible.builtin.systemd_service:
    name: cron
    state: started
    enabled: true

- name: DevSec Hardening role.
  block:
    - name: OS hardening role.
      ansible.builtin.include_role:
        name: devsec.hardening.os_hardening

    - name: Flush handlers.
      ansible.builtin.meta: flush_handlers

- name: SELinux activate.
  ansible.builtin.command: selinux-activate
  changed_when: true

- name: Reboot and pause 5 minutes for SELinux tasks to complete.
  ansible.builtin.reboot:
    post_reboot_delay: 300
    reboot_command: reboot now

- name: Rkhunter database baseline.
  ansible.builtin.command: /usr/bin/rkhunter --propupd
  async: 900
  poll: 5
  changed_when: true

- name: Rkhunter initial check.
  ansible.builtin.command: /usr/bin/rkhunter --cronjob
  async: 900
  poll: 5
  changed_when: true
  ignore_errors: true

- name: Create an extra log folder with root only permissions.
  ansible.builtin.file:
    path: "{{ ansible_custom_log }}/"
    state: directory
    mode: '0750'
    owner: root
    group: root

- name: Create an extra log folder for automatic tasks with root only permissions.
  ansible.builtin.file:
    path: "{{ ansible_custom_log }}/auto"
    state: directory
    mode: '0750'
    owner: root
    group: root

# Currently disabled due to unused. Uncomment to create an environment variable for the logging folder location if desired.
# - name: Move environment variables to /etc/profile.d/ for logging.
#   ansible.builtin.template:
#     src: env_vars.j2
#     dest: /etc/profile.d/env_vars.sh
#     mode: '0740'
#     owner: root
#     group: root

- name: Create logwatch folder.
  ansible.builtin.file:
    path: /var/cache/logwatch
    state: directory
    mode: '0750'

- name: Copy logwatch configuration file for editing.
  ansible.builtin.copy:
    src: /usr/share/logwatch/default.conf/logwatch.conf
    dest: /etc/logwatch/conf/logwatch.conf
    owner: root
    group: root
    mode: '0640'
    remote_src: true

- name: Configure logwatch to detail level 7.
  ansible.builtin.lineinfile:
    path: /etc/logwatch/conf/logwatch.conf
    search_string: 'Detail = Low'
    line: 'Detail = {{ logwatch_custom_detail }}'

# - name: TCPDump general capture cron.
#   ansible.builtin.cron:
#     name: "TCPDump general capture."
#     special_time: reboot
#     job: "/usr/bin/tcpdump -i any -nn >> {{ ansible_custom_log }}/auto/tcpdump_general.cap"

- name: Rkhunter cron.
  ansible.builtin.cron:
    name: "Rkhunter scan."
    minute: 0
    hour: 12
    job: "/usr/bin/rkhunter --cronjob"

- name: Rkhunter reboot cron.
  ansible.builtin.cron:
    name: "Rkhunter scan on reboot."
    job: "/usr/bin/rkhunter --cronjob"
    special_time: reboot

- name: Lynis cron.
  ansible.builtin.cron:
    name: "Lynis Scan."
    minute: 0
    hour: 13
    job: "/usr/sbin/lynis audit system"

- name: Lynis reboot cron.
  ansible.builtin.cron:
    name: "Lynis Scan on reboot."
    special_time: reboot
    job: "/usr/sbin/lynis audit system"

- name: Logwatch cron.
  ansible.builtin.cron:
    name: "Logwatch report."
    minute: 0
    hour: 14
    job: "/usr/sbin/logwatch"

- name: Logwatch reboot cron.
  ansible.builtin.cron:
    name: "Logwatch report on reboot."
    special_time: reboot
    job: "/usr/sbin/logwatch"

- name: Disable root user shell.
  ansible.builtin.user:
    name: root
    shell: /sbin/nologin

- name: Unattended-upgrades enable automated reboot.
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    insertafter: Unattended-Upgrade::Automatic-Reboot "
    line: Unattended-Upgrade::Automated-Reboot "true";

- name: Unattended-upgrades set automated reboot time.
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    insertafter: Unattended-Upgrade::Automatic-Reboot-Time
    line: Unattended-Upgrade::Automatic-Reboot-Time "{{ unattendedup_reboot_time }}";

- name: AIDE init
  ansible.builtin.command: aideinit -y -f
  async: 1800
  poll: 15
  changed_when: true

- name: Copy backup AIDE database to log directory.
  ansible.builtin.copy:
    src: /var/lib/aide/aide.db.new
    dest: "{{ ansible_custom_log }}/auto/aide.db"
    owner: root
    group: root
    mode: '0640'
    backup: true
    remote_src: true

- name: Copy AIDE database.
  ansible.builtin.copy:
    src: /var/lib/aide/aide.db.new
    dest: /var/lib/aide/aide.db
    owner: root
    group: root
    mode: '0640'
    remote_src: true

- name: Lynis initial run.
  ansible.builtin.command: /usr/sbin/lynis audit system
  changed_when: true

- name: Systemd daily aide check service start.
  ansible.builtin.systemd_service:
    name: dailyaidecheck.timer
    state: started
    enabled: true

- name: Add automated AIDE check line for additional logging.
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/dailyaidecheck.service
    insertafter: ExecStart=/usr/share/aide/bin/dailyaidecheck --systemdservice
    line: ExecStartPost=/usr/bin/cp --backup=t /var/lib/aide/aide.db /var/log/aide/
