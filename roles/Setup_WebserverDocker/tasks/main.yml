---
#Webserver reverse proxy currently untested as of V1.
- name: Install docker, tcpdump and firewalld.
  ansible.builtin.package:
    name:
      - docker.io
      - tcpdump
      - firewalld
    state: present

- name: Pull webserver image (Default docker, wolfi base from ChainGuard)
  community.docker.docker_image:
    name: "{{ docker_webserver_image }}"
    source: pull

# Rich_rule provided for reverse proxy configuration.
- name: Port http traffic firewall rule.
  ansible.posix.firewalld:
    zone: public
#    rich_rule: rule port port="{{ webserver_http_port }}" family=ipv4 protocol="udp" source address="{{ ansible_webproxy_ip }}" accept
    port: "{{ webserver_http_port }}/udp"
    permanent: true
    immediate: true
    state: enabled

- name: TCPDump port 8080.
  ansible.builtin.cron:
    name: "TCPDump port 8080."
    special_time: reboot
    job: "/usr/bin/tcpdump -i any -nn port {{ webserver_http_port }} >> {{ ansible_custom_log }}/auto/tcpdump_general.cap"

- name: Docker systemd service start.
  ansible.builtin.systemd_service:
    name: docker
    state: started
    enabled: true

- name: Move webserver-docker systemd service into place.
  ansible.builtin.template:
    src: docker-webserver.j2
    dest: /lib/systemd/system/docker-webserver.service
    mode: '0644'
    owner: root
    group: root

- name: Docker autostart service enable.
  ansible.builtin.systemd_service:
    name: docker-webserver.service
    state: started
    enabled: true
